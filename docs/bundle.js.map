{
  "version": 3,
  "sources": ["../debouncer.mjs", "../core.mjs", "../styleReset/main.mjs", "../string.mjs", "../object.mjs", "src/utils/normalize.mjs", "src/db/attributes.mjs", "src/db/aliases.mjs", "src/components/description.mjs", "../styles.mjs", "src/components/bulletpoint.mjs", "../array.mjs", "../base93.mjs", "../random.mjs", "../store.mjs", "../inputTypes.mjs", "src/components/filter.mjs", "../fonts.mjs", "src/components/code.mjs", "src/components/namedSection.mjs", "src/components/importStatement.mjs", "src/components/parameters.mjs", "src/components/returns.mjs", "src/components/usageList.mjs", "src/components/method.mjs", "src/components/singleton.mjs", "src/components/list.mjs", "src/components/docDb.mjs", "src/index.mjs"],
  "sourcesContent": ["\"use strict\"\n\nexport const DEBOUNCER_CANCEL     = 0;\nexport const DEBOUNCER_INSTANT    = 1;\nexport const DEBOUNCER_LATER      = 2;\nexport const DEBOUNCER_RUSH       = 3;\n\n\n// RUSH - runs immediately if there is awaiting\n// LATER - runs in specified amount of time\n// CANCEL - cancels if there is anything ongoing\n// INSTANT - runs immediately\n\nexport const runIfInactive = (callback, timeInMs = 30) => {\n    const activator = (sureToActivate) => {\n        const isAwaiting = activator.isAwaiting;\n        if (isAwaiting) {\n            clearTimeout(isAwaiting - 1);\n            activator.isAwaiting = 0;\n        }\n\n        if (sureToActivate === DEBOUNCER_INSTANT || (isAwaiting && (sureToActivate === DEBOUNCER_RUSH))) {\n            return callback();\n        }\n        if (sureToActivate === DEBOUNCER_CANCEL) {\n            return;\n        }\n\n        activator.isAwaiting = setTimeout(()=> {\n            activator.isAwaiting = 0;\n\n            callback();\n        }, timeInMs) + 1;            \n    }\n    return activator;\n};\n", "import { runIfInactive } from \"./debouncer.mjs\";\n\nexport const TRUE       = 1;\nexport const FALSE      = 0;\nexport const toBoolean  = value => value ? TRUE : FALSE;\n// ================================================\nexport const UNDEFINED  = undefined;\nexport const NULL       = null;\n// ================================================\nexport const wnd        = window;\nexport const doc        = document;\nexport const docStyle   = /*@__PURE__*/doc.getElementsByTagName('style')[0];\nexport const bodyNative = doc.body;\nbodyNative.isAttachedToDOM = TRUE;\nbodyNative.isLifecycleTracked = TRUE;\nbodyNative.onLifecycleListeningChildren = new Map();\n\n\n\n// ================================================\n\nexport const isArray = tested => Array.isArray(tested);\nexport const isFunction = v => typeof v === 'function';\nexport const isObject = o => typeof o === 'object' && o !== null;\nexport const isString = (value) => typeof value === 'string';\nexport const isNumber = value => Number.isFinite(value);\nexport const isMap = object => object instanceof Map;\nexport const isCapitalLetter = letter => letter === letter.toUpperCase();\n// ------------------------------------------------\nexport const makeArray = element => isArray(element) ? element : [element];\nexport const makeFirstCapital = text => text[0].toUpperCase() + text.substr(1);\nexport const makeEnumFromStringArray = arr => {\n    const result = {};\n    arr.forEach((e, i) => {\n        if (isArray(e)) {\n            e.forEach(el => result[el] = i + 1);\n        } else {\n            result[e] = i + 1;\n        }\n    });\n    return result;\n}\nexport const makeCharList = (...list) => {\n    list = list.map(l => {\n        if (isString(l)) {\n            const newList = {};\n            for (let i = 0; i < l.length; i++) {\n                newList[l[i]] = 1;\n            }\n            return newList;\n        }\n        return l;\n    });\n    const result = Object.assign({}, ...list)\n    return result; \n}\nexport const excludeFromCharList = (charList, ...listToExclude) => {\n    charList = makeCharList(charList);\n    listToExclude = makeCharList(...listToExclude);\n    for (let char in listToExclude) {\n        delete charList[char];\n    }\n    return charList;\n}\n// ================================================\nexport const parentNode = element => element.parentNode;\nexport const previousNode = element => element.previousSibling;\nexport const nextNode = element => element.nextSibling;\nexport const firstNode = element => element.firstChild;\n// ================================================\nexport const setAttribute = (element, attribute, value) => element.setAttribute(attribute, value);\nexport const getAttribute = (element, attribute) => element.getAttribute(attribute);\nexport const removeAttribute = (element, attribute) => element.removeAttribute(attribute);\n// ------------------------------------------------\nexport const placeholder = (text, el) => element => setAttribute(element || el, 'placeholder', text);\nexport const href = (text, el) => element => setAttribute(element || el, 'href', text);\nexport const src = (text, el) => element => setAttribute(element || el, 'src', text);\nexport const _id_ = (text, el) => element => setAttribute(element || el, 'id', text);\n\n\n// ################################################\n// Events section\n// ################################################\n\nexport const SoftEvent                  = (...fixedArgs) => {\n\n//     const list = new Map();\n//     return {\n//         list,\n//         add: (callback) => (list.set(callback, callback), callback),\n//         del: (callback) => list.delete(callback),\n//         raise: (...param) => list.forEach((callback) => callback( ...param, ...fixedArgs))\n//     }\n\n    const list = new Map();\n    list.add = (callback) => (list.set(callback, callback), callback);\n    list.del = list.delete;\n    list.raise = (...param) => list.forEach((callback) => callback( ...param, ...fixedArgs));\n    return list;\n}\nexport const SoftEventSelective         = (...fixedArgs) => {\n    const map = new Map();\n    return {\n        add: (obj, callback) => {\n            let list\n            if (map.has(obj)) {\n                list = map.get(obj);\n            } else {\n                list = new Map();\n                map.set(obj, list);\n            }\n\n            list.set(callback, callback)\n            return callback;\n        },\n\n        del: (obj, callback) => {\n            if (map.has(obj)) {\n                const list = map.get(obj);\n                list.delete(callback);\n                if (!list.length) map.delete(obj);\n            }\n        },\n        delAll: (obj) => map.delete(obj),\n        raise: (obj, ...param) => {\n            if (map.has(obj)) {\n                const list = map.get(obj);\n                list.forEach((callback) => callback(obj, ...param, ...fixedArgs))\n            }\n        }\n    }\n}\n\n// ------------------------------------------------\n\nexport const addEvent_raw               = (element, eventName, eventListener) => element.addEventListener(eventName, eventListener);\nexport const removeEvent_raw            = (element, eventName, eventListener) => element.removeEventListener(eventName, eventListener);\n\nexport const preventDefault             = event => event.preventDefault();\nexport const stopPropagation            = event => event.stopPropagation();\nexport const stopImmediatePropagation   = event => event.stopImmediatePropagation();\nexport const getEventPath               = event => event.composedPath();\n\n// ------------------------------------------------\nconst eventAdd                          = (element, eventObject) => {\n    addEvent_raw(element, eventObject.__name__, eventObject.__listener__)\n}\n// ------------------------------------------------\n\nexport const createEvent = (eventName) => {\n    const event = (eventListener, optionalElement) => {\n        if (optionalElement) {\n            addEvent_raw(optionalElement, eventName, eventListener);\n        } else {\n            return {\n                __op__:         OP_EVENT,\n                __name__:       eventName,\n                __listener__:   eventListener\n            }\n        }\n    }\n    event.remove = (element, eventListener) => removeEvent_raw(element, eventName, eventListener);\n    return event;\n}\n\nexport const onChange =         /*@__PURE__*/createEvent(`change`);\nexport const onClick =          /*@__PURE__*/createEvent(`click`);\nexport const onInput =          /*@__PURE__*/createEvent(`input`);\nexport const onKeyDown =        /*@__PURE__*/createEvent(`keydown`);\nexport const onKeyUp =          /*@__PURE__*/createEvent(`keyup`);\nexport const onKeyPress =       /*@__PURE__*/createEvent(`keypress`);\nexport const onMouseDown =      /*@__PURE__*/createEvent(`mousedown`);\nexport const onMouseUp =        /*@__PURE__*/createEvent(`mouseup`);\nexport const onMouseMove =      /*@__PURE__*/createEvent(`mousemove`);\nexport const onSelect =         /*@__PURE__*/createEvent(`select`);\nexport const onContextMenu =    /*@__PURE__*/createEvent(`contextmenu`);\nexport const onDrop =           /*@__PURE__*/createEvent(`drop`);\n\nexport const onFocus =          /*@__PURE__*/createEvent(`focus`);\nexport const onFocusIn =        /*@__PURE__*/createEvent(`focusin`);  // bubbles\nexport const onFocusOut =       /*@__PURE__*/createEvent(`focusout`); // bubbles\nexport const onBlur =           /*@__PURE__*/createEvent(`blur`);\nexport const onWndResize =      /*@__PURE__*/createEvent(`resize`);\n\n\n// -----------------------------------------------------------------\n\nexport const LIFECYCLE_DETACHED = 0;\nexport const LIFECYCLE_ATTACHED = 1;\n\n// -----------------------------------------------------------------\nconst isLifecycleObject = e => \n    (e.isAttachedToDOM !== UNDEFINED) ||\n    (e.isLifecycleTracked !== UNDEFINED) ||\n    (e.onLifecycle !== UNDEFINED) ||\n    (e.onLifecycleListeningChildren !== UNDEFINED)\nconst getLifecycleDebugObject = (currentDOMelement, element) => (\n    isLifecycleObject(currentDOMelement) ?\n    {\n        isAttachedToDOM: currentDOMelement.isAttachedToDOM,\n        isLifecycleTracked: currentDOMelement.isLifecycleTracked,\n        onLifecycleListeningChildren: currentDOMelement.onLifecycleListeningChildren,\n        onLifecycle: currentDOMelement.onLifecycle,\n        parent: element,\n        element: currentDOMelement\n    }\n    :\n    {\n        parent: element,\n        element: currentDOMelement \n    }\n)\n// -----------------------------------------------------------------\n\nconst onLifecycle_CheckIfParentsAttachedToDOM = (element, child) => {\n    const isAttachedToDOM =\n        forEachParent(element, e => {\n            if (e.isLifecycleTracked) return e.isAttachedToDOM;\n        }, TRUE);\n\n    forEachParent(element, e => {\n        e.isAttachedToDOM = isAttachedToDOM;\n        if (e.onLifecycleListeningChildren === UNDEFINED) e.onLifecycleListeningChildren = new Map();\n        e.onLifecycleListeningChildren.set(child, child);\n        if (e.isLifecycleTracked) return e;\n        e.isLifecycleTracked = TRUE;\n        child = e;\n    }, TRUE);\n\n    return isAttachedToDOM;\n}\nconst onLifecycle_UpdateElementAndParentsDueToRemoval = (element) => {\n    if (\n        (!element.onLifecycle || !element.onLifecycle.size) &&\n        (!element.onLifecycleListeningChildren || !element.onLifecycleListeningChildren.size)\n    ) {\n        element.isLifecycleTracked = FALSE;\n\n        let child = element;\n        forEachParent(element, e => {\n            if (e.onLifecycleListeningChildren) {\n                e.onLifecycleListeningChildren.delete(child);\n            }\n    \n            if (e === bodyNative) return TRUE;\n    \n            if (\n                (!e.onLifecycle || !e.onLifecycle.size) &&\n                (!e.onLifecycleListeningChildren || !e.onLifecycleListeningChildren.size)\n            ) {\n                e.isLifecycleTracked = FALSE;\n            } else {\n                return TRUE;\n            }\n            child = e;\n        });\n\n    }\n}\nexport const onLifecycle = (eventListener, optionalElement) => {\n    const event = (element) => {\n        if (!element.onLifecycle) element.onLifecycle = SoftEvent(element);\n        element.onLifecycle.add(eventListener);\n        element.isLifecycleTracked = TRUE;\n        const parent = parentNode(element);\n        element.isAttachedToDOM = parent ? \n            onLifecycle_CheckIfParentsAttachedToDOM(parent, element) : FALSE;\n\n        // TODO: consider if below is reasonable\n        // // autorun event if element is attached to DOM while adding event\n        // autorun && element.isAttachedToDOM && eventListener(element, TRUE);\n        element.isAttachedToDOM && eventListener(LIFECYCLE_ATTACHED, element);\n    }\n    if (optionalElement) event(optionalElement);\n    return event;\n}\nonLifecycle.remove = (element, eventListener) => {\n    if (element.onLifecycle) {\n        element.onLifecycle.del(eventListener);\n        onLifecycle_UpdateElementAndParentsDueToRemoval(element);\n    }\n}\nconst onLifecycleRaise = (element, status) => {\n    switch (status) {\n        case LIFECYCLE_DETACHED:\n            element.isAttachedToDOM = FALSE;\n            break;\n        case LIFECYCLE_ATTACHED:\n            element.isAttachedToDOM = TRUE;\n            // attach will bubble down\n            if (element.onLifecycle) element.onLifecycle.raise(status);\n            break;\n    }\n\n    if (element.onLifecycleListeningChildren) {\n        element.onLifecycleListeningChildren.forEach(e => onLifecycleRaise(e, status));\n    }\n\n    if (!element.isAttachedToDOM) {\n        // detach will bubble up\n        if (element.onLifecycle) element.onLifecycle.raise(status);\n    }\n}\n\n\n// ################################################\n// Styles section\n// ################################################\n\nconst CSSContentMap = {};\nconst updateCSSContent = runIfInactive(() => {\n    let content = '';\n    for (let name in CSSContentMap) {\n        const element = CSSContentMap[name];\n        if (element) content +=  CSSContentMap[name].__CSS__;\n    }\n    docStyle.innerHTML = content;\n}, 0);\n\n// ================================================\nconst STYLE_TYPE_EVENT = 1;\nconst STYLE_TYPE_OPTION = 2;\nconst STYLE_TYPE_BRANCH = 3;\n\n// ================================================\n\nlet styleFontSize = 16;\nexport const styleSetFontSize = (size) => {\n    styleFontSize = size;\n}\n\nexport const em = (size) => size ? ((size * styleFontSize) | 0) + 'px' : 0;\nconst styleOnPostCompilation = (callback, ...args) => (value, styleObject) => {\n    styleObject.__runAfterCompile__.push(\n        () => callback(value, styleObject, ...args)\n    )\n    return styleObject.__compiled__;\n}\nconst stylePrefixedPropertyGroup = (prefix, exclusions={}, importance=[], directUseCallback) => {\n    const styleImportance = makeEnumFromStringArray(importance);\n\n    return (valuesObject, styleObject) => {\n        if (isObject(valuesObject) && !isArray(valuesObject)) {\n            let words = []\n\n            const addPropName = name => \n                words.push([name, styleImportance[name] || 11111]);\n    \n            const processSingle = (name, value) => {\n                if (isObject(value) && !isArray(value)) {\n                    addPropName(name);\n                    process(value);\n                    words.pop();\n                } else {\n                    addPropName(name);\n                    const propNameFinal = prefix + words\n                        .sort(([keyA, valueA], [keyB, valueB]) => valueA-valueB)\n                        .map(([key]) => makeFirstCapital(key))\n                        .join('');\n    \n                    styleObject.__compiled__[propNameFinal] = value;\n                    words.pop();\n                }\n            }\n    \n            const process = obj => {\n                for (let name in obj) {\n                    processSingle(name, obj[name]);\n                }\n            }\n    \n            for (let nameSuffix in valuesObject) {\n                const exclusion = exclusions[nameSuffix];\n                const value = valuesObject[nameSuffix];\n                if (exclusion) {\n                    if (isFunction(exclusion)) {\n                        styleObject.__compiled__ = exclusion(value, styleObject);\n                    } else {\n                        styleObject.__compiled__[exclusion] = value;\n                    }\n                } else if (nameSuffix === '$') {\n                    styleObject.__compiled__[prefix] = value;\n                } else {\n                    processSingle(nameSuffix, value);\n                }\n            }    \n        } else {\n            if (directUseCallback) {\n                styleObject.__compiled__ = directUseCallback(valuesObject, styleObject)\n            } else {\n                styleObject.__compiled__[prefix] = valuesObject;\n            }\n        }\n\n        return styleObject.__compiled__;\n    }\n}\nconst propertyNameToStylePropertyName = propertyName => {\n    let result = '';\n    for (let i = 0; i < propertyName.length; i++) {\n        const char = propertyName[i];\n        const charNonCapital = char.toLowerCase();\n        if (char === charNonCapital) {\n            result += char;\n        } else if (char === '_') {\n            result += '-';\n        } else {\n            result += '-' + charNonCapital;\n        }\n    }\n    return result;\n}\nconst subStyleProperty = (value, styleObject, type) => {\n    for (let name in value) {\n        // const subStyleDefinition = Object.assign({}, styleObject.__compiled__, value[name]);\n        // const subStyleDefinition = Object.assign({}, value[name]);\n        const subStyleDefinition = value[name];\n\n        if (styleObject[name] === UNDEFINED) {\n            const newStyleObject = style(subStyleDefinition);\n            newStyleObject.__parentId__ = styleObject.__id__;\n            newStyleObject.__type__ = type;\n            newStyleObject.__typeName__ = name;\n            styleObject[name] = newStyleObject;\n        } else { \n            // TODO: throw error\n        }\n    }\n    return styleObject.__compiled__;\n}\n// ------------------------------------------------\nconst styleCustomSelector   = styleOnPostCompilation((value, styleObject) => {\n    styleObject.__selector__ = value;\n    return styleObject.__compiled__;\n});\nconst styleCustomInherit    = (value, styleObject) => {\n    value = makeArray(value);\n    return Object.assign(\n        {},\n        ...value.map(s => s.__compiled__), \n        styleObject.__compiled__\n    );\n}\n\nconst styleCustomText       = stylePrefixedPropertyGroup('text', {\n    font: 'fontFamily',\n    size: 'fontSize',\n    style: 'fontStyle',\n    weight: 'fontWeight',\n    height: 'lineHeight',\n    color: 'color',\n});\nconst styleCustomBackground = stylePrefixedPropertyGroup('background');\nconst styleCustomBorder     = stylePrefixedPropertyGroup('border', {}, \n    ['block', 'inline', 'parts', ['start', 'end'], 'top', 'bottom', 'left', 'right']);\nconst styleCustomMargin     = stylePrefixedPropertyGroup('margin');\nconst styleCustomPadding    = stylePrefixedPropertyGroup('padding');\n\nconst styleCustomOptions    = styleOnPostCompilation(subStyleProperty, STYLE_TYPE_OPTION);\nconst styleCustomOn         = styleOnPostCompilation(subStyleProperty, STYLE_TYPE_EVENT);\nconst styleCustomBranches   = styleOnPostCompilation(subStyleProperty, STYLE_TYPE_BRANCH);\n\nconst styleCustomProperties = {\n    inherit:    styleCustomInherit,\n    selector:   styleCustomSelector,\n\n    text:       styleCustomText,\n    background: styleCustomBackground,\n    border:     styleCustomBorder,\n    margin:     styleCustomMargin,\n    padding:    styleCustomPadding,\n\n    options:    styleCustomOptions,\n    on:         styleCustomOn,\n    branches:   styleCustomBranches,\n}\n// ------------------------------------------------\nconst getCSSBody = styleObject => {\n    if (styleObject.__CSSBody__) return styleObject.__CSSBody__;\n    const __compiled__ = styleObject.__compiled__;\n    const result = ['{'];\n    for (let name in __compiled__) {\n        const propertyName = propertyNameToStylePropertyName(name);\n        let propertyValue = __compiled__[name];\n        if (isNumber(propertyValue)) {\n            propertyValue = em(propertyValue);\n        } else if (isArray(propertyValue)) {\n            propertyValue = propertyValue.map(e => {\n                if (isNumber(e)) e = em(e);\n                return e;\n            }).join(' ');\n        }\n\n        result.push(propertyName + ':' + propertyValue + ';');\n\n    }\n    result.push('}');\n    return styleObject.__CSSBody__ = result.join('');\n}\nconst getSelectorNamed = styleObject => {\n    if (!styleObject.__CSS__) {\n        const selectorList = ['.' + styleObject.__name__];\n        if (styleObject.__selector__) selectorList.push(styleObject.__selector__);\n        if (styleObject.__type__ === STYLE_TYPE_EVENT) {\n            selectorList.push(\n                prepareSelectorNamed(styleObject.__parentId__) + ':' +\n                propertyNameToStylePropertyName(styleObject.__typeName__)\n            )\n        }        \n\n        for (let name in styleObject) {\n            const element = styleObject[name];\n            if (element) {\n                if (element.__type__ === STYLE_TYPE_EVENT) {\n                    getSelectorNamed(element);\n                // } else if (element.__type__) {\n                //     CSSContentMap[styleObject.__name__] = null; // preserve order\n                }\n            }\n        }\n\n        styleObject.__CSS__ = selectorList.join(',') + \n            getCSSBody(styleObject);\n\n        CSSContentMap[styleObject.__name__] = styleObject;\n        updateCSSContent();\n    }\n    return styleObject.__name__;\n}\n// ------------------------------------------------\nlet styleId = 0;\nconst styleNamePrefix = '_S';\nconst prepareName = id => styleNamePrefix + id;\nconst prepareSelectorNamed = id => '.' + prepareName(id);\n\nexport const style = (...inheritsAndDefinitions) => {\n    let argPos = inheritsAndDefinitions.length;\n    let inherits = {};\n    let __definition__ = {};\n\n    while (argPos) {\n        argPos--;\n        const element = inheritsAndDefinitions[argPos];\n\n        if (element.__compiled__) {\n            Object.assign(inherits, element.__compiled__);\n        } else {\n            Object.assign(__definition__, element);\n        }\n    }\n\n\n    styleId++;\n    const __compiled__ = Object.assign({}, inherits, __definition__);\n    // console.log(__compiled__)\n    const __runAfterCompile__ = [];\n    const styleObject = {\n        __op__:                 OP_STYLE,\n        __id__:                 styleId,\n        __name__:               prepareName(styleId),\n        __selectorNamed__:      prepareSelectorNamed(styleId),\n        __definition__,\n        __compiled__,\n        __runAfterCompile__\n    }\n\n    for (let customProperty in styleCustomProperties) {\n        const value = __compiled__[customProperty]; \n        if (value !== undefined) {\n            delete __compiled__[customProperty];\n            styleObject.__compiled__ = styleCustomProperties[customProperty](value, styleObject);\n        }\n    }\n    for (let i = 0; i < __runAfterCompile__.length; i++) {\n        __runAfterCompile__[i]();\n    }\n    delete styleObject.__runAfterCompile__;\n    if (styleObject.__selector__) getSelectorNamed(styleObject); // if custom selector defined then compile style immediately\n\n    return styleObject;\n}\nexport const addClass = (element, className) => element.classList.add(className);\nexport const removeClass = (element, className) => element.classList.remove(className);\n\nconst selectedOptionPrefix = '__so';\n\nexport const styleSet = (element, styleObject) => {\n    const selectorNamed = getSelectorNamed(styleObject);\n    if (styleObject.__type__ === STYLE_TYPE_OPTION) {\n        const prefix = selectedOptionPrefix + styleObject.__parentId__;\n        const currentStyleName = element[prefix];\n        if (currentStyleName) {\n            if (currentStyleName !== selectorNamed) {\n                removeClass(element, currentStyleName);\n                addClass(element, element[prefix] = selectorNamed);    \n            }\n        } else {\n            addClass(element, element[prefix] = selectorNamed);\n        }\n    } else {\n        addClass(element, selectorNamed);\n    }\n\n}\nexport const styleDel = (element, styleObject) => {\n    const selectorNamed = getSelectorNamed(styleObject);\n    if (styleObject.__type__ === STYLE_TYPE_OPTION) {\n        const prefix = selectedOptionPrefix + styleObject.__parentId__;\n        const currentStyleName = element[prefix];\n        if (currentStyleName) {\n            removeClass(element, currentStyleName);\n            delete element[prefix];\n        }\n    } else {\n        removeClass(element, selectorNamed);\n    }\n}\n\n// ################################################\n// HTML element sextion\n// ################################################\nconst OP_STYLE = 1;\nconst OP_EVENT = 2;\nlet   OP_FREE  = 3;\n\n\nexport const createElement = element => doc.createElement(element);\n\nconst elementCustomOperations = {\n    [OP_STYLE]: styleSet,\n    [OP_EVENT]: eventAdd\n}\nconst createElementCore = (tagName, ce = createElement) => (...children) => {\n    const element = ce(tagName);\n\n    /* less flexible, faster version here: */\n\n    // let i = 0;\n    // for (; i < children.length; i++) {\n    //     const child = children[i];\n    //     let op;\n    //     if (child) {\n    //         if (isFunction(child)) {\n    //             child(element);\n    //         } else if (op = child.__op__) {\n    //             elementCustomOperations[op](element, child);\n    //         } else break;    \n    //     }\n    // }\n\n    // for (; i < children.length; i++) {\n    //     const child = children[i];\n    //     child && appendChildOnBottom(element, child);\n    // }\n\n    // ==== v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v ====\n\n    /* more flexible, slower version here: */\n    for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        let op;\n        if (child) {\n            if (isFunction(child)) {\n                child(element);\n            } else if (op = child.__op__) {\n                elementCustomOperations[op](element, child);\n            } else if (isString(child)) {\n                appendChildOnBottom(element, text(child))\n            } else {\n                appendChildOnBottom(element, child);\n            }\n        }\n    }\n\n    return element; \n}\nexport const separateElementArgs = args => {\n    const operations = [];\n    const other = [];\n    const result = {\n        operations, other\n    }\n\n    for (let i=0; i < args.length; i++) {\n        const child = args[i];\n        if (child.__op__) {\n            operations.push(child);\n        } else {\n            other.push(child);\n        }\n    }\n\n    return result;\n}\n\nexport const comment    = (data = '') => doc.createComment(data);\nexport const text       = (txt) => doc.createTextNode(txt);\nexport const body       = /*@__PURE__*/createElementCore('', () => bodyNative);\nexport const div        = /*@__PURE__*/createElementCore('div');\nexport const span       = /*@__PURE__*/createElementCore('span');\nexport const a          = /*@__PURE__*/createElementCore('a');\nexport const img        = /*@__PURE__*/createElementCore('img');\n\nexport const input      = /*@__PURE__*/createElementCore('input');\nexport const textarea   = /*@__PURE__*/createElementCore('textarea');\nexport const select     = /*@__PURE__*/createElementCore('select');\nexport const option     = (...args) => new Option(...args);\n\n\n\n// ================================================\n\nexport const forEachChild = (element, callback) => {\n    const children = element.children;\n    const childrenLength = children.length\n    for (let i = 0; i < childrenLength; i++) {\n        if (callback(children[i], i)) return;\n    }\n}\nexport const forEachParent = (element, callback, includeElement) => {\n    let result;\n    if (!includeElement) element = parentNode(element);\n\n    while (element) {\n        if ((result = callback(element)) !== UNDEFINED) return result;\n        if (element === bodyNative) return;\n        element = parentNode(element);\n    }\n}\n\n// ------------------------------------------------\n\nexport const replaceChild_raw = (element, childNew, childOld) => element.replaceChild(childNew, childOld);\nexport const appendChildOnBottom_raw = (element, child) => element.appendChild(child);\nexport const appendChildBefore_raw = (element, child, before) => element.insertBefore(child, before);\nexport const appendChildAfter_raw = (element, child, after) => {\n    const next = nextNode(after);\n    if (next) {\n        appendChildBefore(element, child, next);\n    } else {\n        appendChildOnBottom(element, child);\n    }\n}\nexport const appendChildOnTop_raw = (element, child) => appendChildBefore(element, child, firstNode(element));\nexport const removeChild_raw = (element, child) => element.removeChild(child);\nexport const removeElement_raw = (element) => removeChild(parentNode(element), element);\n\n// ------------------------------------------------\n\nconst postAppendLifecycleProcess = (element, child, previosParentOfChild) => {\n    if (previosParentOfChild && (previosParentOfChild !== element)) {\n        previosParentOfChild.onLifecycleListeningChildren.delete(child);\n        onLifecycle_UpdateElementAndParentsDueToRemoval(element);\n    }\n\n\n    // if (element.onLifecycleListeningChildren) {\n    //     // element.isLifecycleTracked = TRUE;\n    //     element.onLifecycleListeningChildren.set(child, child);\n    // } else if (!element.isLifecycleTracked || !element.onLifecycleListeningChildren) {\n        onLifecycle_CheckIfParentsAttachedToDOM(element, child);\n    // }\n\n    if (element.isAttachedToDOM) {\n        if (!child.isAttachedToDOM) {\n            onLifecycleRaise(child, LIFECYCLE_ATTACHED);\n        }\n    } else {\n        if (child.isAttachedToDOM) {\n            onLifecycleRaise(child, LIFECYCLE_DETACHED);\n        }\n    }\n}\nconst postRemoveLifecycleProcess = (element, child) => {\n    onLifecycleRaise(child, LIFECYCLE_DETACHED);\n    const onLifecycleListeningChildren = element.onLifecycleListeningChildren;\n    if (onLifecycleListeningChildren) {\n        onLifecycleListeningChildren.delete(child);\n        onLifecycle_UpdateElementAndParentsDueToRemoval(element);\n    }\n}\nexport const replaceChild = (element, childNew, childOld) => {\n    if (childNew !== childOld) {\n        const previosParentOfChildNew = parentNode(childNew);\n        replaceChild_raw(element, childNew, childOld);\n        if (childOld.isLifecycleTracked) {\n            postRemoveLifecycleProcess(element, childOld);\n        }\n        if (childNew.isLifecycleTracked) {\n            postAppendLifecycleProcess(element, childNew, previosParentOfChildNew);\n        }  \n    }\n}\nexport const appendChildOnBottom = (element, child) => {\n\n    if (child.isLifecycleTracked) {\n        const previosParentOfChild = parentNode(child);\n        appendChildOnBottom_raw(element, child);\n        postAppendLifecycleProcess(element, child, previosParentOfChild);\n    } else {\n        appendChildOnBottom_raw(element, child);\n    }\n}\nexport const appendChildBefore = (element, child, before) => {\n\n    if (child.isLifecycleTracked) {\n        const previosParentOfChild = parentNode(child);\n        appendChildBefore_raw(element, child, before);\n        postAppendLifecycleProcess(element, child, previosParentOfChild);\n    } else {\n        appendChildBefore_raw(element, child, before);\n    }\n}\nexport const appendChildAfter = (element, child, after) => {\n    if (child.isLifecycleTracked) {\n        const previosParentOfChild = parentNode(child);\n        appendChildAfter_raw(element, child, after);\n        postAppendLifecycleProcess(element, child, previosParentOfChild);\n    } else {\n        appendChildAfter_raw(element, child, after);\n    }\n}\nexport const appendChildOnTop = (element, child) => {\n    if (child.isLifecycleTracked) {\n        const previosParentOfChild = parentNode(child);\n        appendChildOnTop_raw(element, child);\n        postAppendLifecycleProcess(element, child, previosParentOfChild);\n    } else {\n        appendChildOnTop_raw(element, child);\n    }\n}\nexport const removeChild = (element, child) => {\n    removeChild_raw(element, child);\n    if (child.isLifecycleTracked) {\n        postRemoveLifecycleProcess(element, child);\n    }  \n}\nexport const removeElement = (element) => {\n    const parentOfElement = parentNode(element);\n    if (parentOfElement) {\n        removeChild_raw(parentOfElement, element);\n        if (element.isLifecycleTracked) {\n            postRemoveLifecycleProcess(parentOfElement, element);\n        }  \n    }\n}\n", "\nimport { style } from \"../core.mjs\"\n\nconst styleMainHtml = style({\n    selector:                   'html',\n    fontSize:                   1,\n    whiteSpace:                 'pre-wrap',\n    lineHeight:                 `1.15`,\n    _webkitTextSizeAdjust:      `100%`\n});\n\nconst styleMainBody = style({\n    selector:                   'body',\n    height:                     `100vh`\n});\n\nconst styleMainAll = style({\n    selector:                   '*',\n    boxSizing:                  'border-box',\n    margin:                     0,\n    padding:                    0,\n\n\tfont:                       'inherit',\n\n    overflow:                   'auto',\n    // scrollbarColor:             'lightgrey rgba(0,0,0,0)',\n    userSelect:                 'none',\n});\n\n\n", "\"use strict\"\n\nimport { makeCharList } from \"./core.mjs\";\n\nexport const stringJoin = (elements, delimiter) => elements.join(delimiter);\nexport const stringDataFormat = (mime, content, encoding = 'utf8') => `data:${mime};${encoding},` + content;\n\nexport const urlToString = text => decodeURIComponent(text);\n\n\nexport const stringToObject = text => JSON.parse(text);\nexport const stringToUrl = text => encodeURIComponent(text);\n\n\nconst emptyChar = makeCharList(' \\t');\nconst newLineChar = makeCharList('\\n\\r');\nconst emptyOrNewLineChar = makeCharList(emptyChar, newLineChar);\n\nexport const stringUnfold = text => {\n    let result = [], previousChar = '';\n    let spaceStart = -1;\n    let skipSpacesMode = 0;\n    for (let i = 0; i < text.length; i++) {\n        const char = text[i];\n        if (spaceStart < 0 && emptyOrNewLineChar[char] && !emptyOrNewLineChar[previousChar]) {\n            spaceStart = i;\n        }\n        if (newLineChar[char]) {\n            skipSpacesMode = 1;\n            if (spaceStart < 0) spaceStart = i;\n        }\n\n        if (!emptyOrNewLineChar[char] && emptyOrNewLineChar[previousChar]) {\n            if (skipSpacesMode) {\n                result.length && result.push(' ');\n                skipSpacesMode = 0;\n            } else {\n                result.length && result.push(text.substring(spaceStart, i));\n            }\n            spaceStart = -1;\n        }\n\n        if (!emptyOrNewLineChar[char]) result.push(char)\n\n        previousChar = char;\n    }\n    return result.join('');\n}", "\"use strict\"\n\nimport { UNDEFINED } from \"./core.mjs\";\nimport { isObject } from \"./core.mjs\";\n\nexport const objectAssign = (...elements) => Object.assign(...elements);\n\nexport const objectDelete = (object, ...elements) => {\n    const toDelete = objectAssign({}, ...elements);\n    object = objectAssign({}, object);\n    for (let name in toDelete) {\n        delete object[name];\n    }\n    return object;\n}\n\nexport const objectAssignIfDoesntExist = (object, ...elements) => {\n    elements.forEach(e => {\n        for (let name in e) {\n            if (object[name] === UNDEFINED) object[name] = e[name];\n        }    \n    })\n    return object;\n}\n\nexport const objectToString = obj => JSON.stringify(obj);\n\nexport const deepCloneFastAndRough = obj => JSON.parse(JSON.stringify(obj))\n\nexport const deepClone = (obj) => {\n    const clone = {};\n    for(let i in obj) {\n        if (isObject(obj[i]))\n            clone[i] = deepClone(obj[i]);\n        else\n            clone[i] = obj[i];\n    }\n    return clone;\n}", "\n\nimport { isString }                     from '../../../core.mjs';\nimport { makeArray }                    from '../../../core.mjs';\nimport { stringUnfold }                 from '../../../string.mjs';\nimport { objectDelete }                 from '../../../object.mjs';\nimport { objectAssignIfDoesntExist }    from '../../../object.mjs';\n\n\nconst unfoldDescriptionFromString = description => {\n    if (isString(description)) {\n        description = {\n            type: 'text',\n            text: description,\n        }\n    }\n    return description;\n}\nconst unfoldDescription = description => {\n    description = makeArray(description);\n    description = description.map(unfoldDescriptionFromString);\n    description.forEach(d => {\n        if (d.text) d.text = stringUnfold(d.text);\n    })\n    return description;\n}\n\nconst toDeleteForSharedProperties = {\n    list: 1,\n    description: 1,\n    title: 1,\n}\nexport const normalizeDocObject = element => {\n    const sharedProperties = objectDelete(element, toDeleteForSharedProperties);\n\n    if (element.description) element.description = unfoldDescription(element.description);\n    if (element.list) {\n        element.list.forEach(e => {\n            if (e.description) e.description = unfoldDescription(e.description);\n            objectAssignIfDoesntExist(e, sharedProperties);\n            if (e.params) {\n                e.params = makeArray(e.params);\n                e.params = e.params.map(p => isString(p) ? {name: p} : p);\n                e.params.forEach(p => {\n                    if (p.description) p.description = unfoldDescription(p.description);\n                });\n            }\n\n            if (e.usage) {\n                e.usage = makeArray(e.usage);\n                e.usage = e.usage.map(u => isString(u) ? {example: u} : u);\n                e.usage.forEach(u => {\n                    if (u.description) u.description = unfoldDescription(u.description);\n                })\n            }\n\n            if (e.returns && e.returns.description) e.returns.description = \n                unfoldDescription(e.returns.description); \n        })\n    }\n\n    return element;\n}\n\n", "import { normalizeDocObject } from \"../utils/normalize.mjs\"\n\nexport const attributes = normalizeDocObject({\n    title:          'Attributes',\n    module:         `core.mjs`,\n    type:           `attribute`,\n    description: `Setting attributes should be done via specified in this framework methods.`,\nlist: [\n\n// --------------------------------------\n{   name:           `placeholder`,\n    kind:           'method',\n    params: [\n        {\n            name: 'text',\n            type: 'string',\n        },\n        {\n            name: 'element',\n            type: 'HTMLElement',\n            optional: 1\n        }\n    ],\n    description:    `Sets a 'placeholder\" attribute`,\n    usage: [\n        `const inputDateField = input(placeholder('yyyy-mm-dd'));`,\n        `const inputDateField = input(); placeholder('yyyy-mm-dd', inputDateField);`\n    ]\n},\n{   name:           `href`,\n    kind:           'method',\n    params: [\n        {\n            name: 'text',\n            type: 'string',\n        },\n        {\n            name: 'element',\n            type: 'HTMLElement',\n            optional: 1\n        }\n    ],\n    description:    `Sets a 'href\" attribute`,\n    usage: [\n        `const link = a(href('https://some-thing.com'));`,\n        `const link = a(); href('https://some-thing.com', link);`\n    ]\n},\n{   name:           `src`,\n    kind:           'method',\n    params: [\n        {\n            name: 'text',\n            type: 'string',\n        },\n        {\n            name: 'element',\n            type: 'HTMLElement',\n            optional: 1\n        }\n    ],\n    description:    `Sets a 'src\" attribute`,\n    usage: [\n        `const image = img(src('https://some-thing.com/picture.jpg'));`,\n        `const image = img(); src('https://some-thing.com/picture.jpg', image);`\n    ]\n},\n// --------------------------------------\n\n]\n});\n", "import { normalizeDocObject } from \"../utils/normalize.mjs\"\n\nexport const aliases = normalizeDocObject({\n    title:          `Aliases`,\n    module:         `core.mjs`,\n    type:           `alias`,\n    description: \n        `Aliases are convenience literals that are shorter to type and/or produce \n        smaller code after minification.`,\nlist: [\n\n// --------------------------------------\n{   name:           `wnd`,\n    raw:            1,\n    kind:           'singleton',\n    description:    `Alias to \"window\" object`,\n    usage:          `const widthInPixels = wnd.innerWidth;`\n},\n{   name:           `doc`,\n    raw:            1,\n    kind:           'singleton',\n    description:    `Alias to \"document\" object`,\n    usage:          `const  = doc.getElementsByTagName('div');`\n},\n{   name:           `docStyle`,\n    raw:            1,\n    kind:           'singleton',\n    description:    `Alias to first \"style\" element in HTML document`,\n    usage:          `docStyle.innerHTML += '*{color:red}'`\n},\n{   name:           `bodyNative`,\n    raw:            1,\n    kind:           'singleton',\n    description:    `Alias to \"document.body\" element`,\n    usage:          `docBody.appendChildren('test');'`\n},\n// --------------------------------------\n{   name:           `parentNode`,\n    raw:            1,\n    kind:           'method',\n    params: [\n        {\n            name: 'element',\n            type: 'HTMLElement'\n        }\n    ],\n    returns: {\n        type:       `HTMLElement`,\n        description:`Parent element to given node element (or null if no parent element)`\n    },\n    description:    `Alias to 'parentNode' property of given 'element'`,\n    usage:          `const parent = parentNode(element);`\n},\n{   name:           `firstNode`,\n    raw:            1,\n    kind:           'method',\n    params: [\n        {\n            name: 'element',\n            type: 'HTMLElement'\n        }\n    ],\n    returns: {\n        type:       `HTMLElement`,\n        description:`First child of element (or 'null' if no children)`\n    },\n    description:    `Alias to 'firstChild' property of given 'element'`,\n    usage:          `const first = firstNode(element);`\n},\n{   name:           `previousNode`,\n    raw:            1,\n    kind:           'method',\n    params: [\n        {\n            name: 'element',\n            type: 'HTMLElement'\n        }\n    ],\n    returns: {\n        type:       `HTMLElement`,\n        description: \n            `Previous sibling element to given node element (or 'null' if no \n            previous element)`\n    },\n    description:    `Alias to 'previousSibling' property of given 'element'`,\n    usage:          `const previous = previousNode(element);`\n},\n{   name:           `nextNode`,\n    raw:            1,\n    kind:           'method',\n    params: [\n        {\n            name: 'element',\n            type: 'HTMLElement'\n        }\n    ],\n    returns: {\n        type:       `HTMLElement`,\n        description:`Next sibling element to given node element (or 'null' if no next element)`\n    },\n    description:    `Alias to 'nextSibling' property of given 'element'`,\n    usage:          `const next = nextNode(element);`\n},\n// --------------------------------------\n{   name:           `setAttribute`,\n    raw:            1,\n    kind:           'method',\n    params: [\n        {\n            name: 'element',\n            type: 'HTMLElement'\n        },\n        {\n            name: 'attribute',\n            type: 'string'\n        },\n        {\n            name: 'value',\n            type: 'string'\n        },\n    ],\n    description:    \n        `Sets to given HTMLElement attribute a value. Alias to 'setAttribute' method \n        of given 'element'`,\n    usage:          `setAttribute(inputElement, 'type', 'text');`\n},\n{   name:           `getAttribute`,\n    raw:            1,\n    kind:           'method',\n    params: [\n        {\n            name: 'element',\n            type: 'HTMLElement'\n        },\n        {\n            name: 'attribute',\n            type: 'string'\n        },\n\n    ],\n    returns: {\n        type:       `string | null`,\n        description:`Value of attribute`\n    },\n    description:    \n        `Gets a value from given HTMLElement attribute. Alias to 'getAttribute' method of given 'element'`,\n    usage:          `const inputElementType = getAttribute(inputElement, 'type');`\n},\n{   name:           `removeAttribute`,\n    raw:            1,\n    kind:           'method',\n    params: [\n        {\n            name: 'element',\n            type: 'HTMLElement'\n        },\n        {\n            name: 'attribute',\n            type: 'string'\n        },\n\n    ],\n    description:    \n        `Removes attribute from given HTMLElement. Alias to 'removeAttribute' method of given 'element'`,\n    usage:          `removeAttribute(inputElement, 'type');`\n},\n// --------------------------------------\n\n]\n});\n", "\nimport { div } from '../../../core.mjs';\nimport { text } from '../../../core.mjs';\nimport { span } from '../../../core.mjs';\n\n\n\nexport const description = d => {\n    if (!d || !d.length) return;\n    const root = div(...d.map(d => {\n            switch (d.type) {\n                case 'text':\n                    return div(d.text);\n                default:\n                    return div('!!!UNDEFINED BEHAVIOUR!!! ' + JSON.stringify(d))\n            }\n        })\n    );\n    return root;\n}", "\nimport { style } from \"./core.mjs\"\n\nexport const directionRow = /*@__PURE__*/style({\n    display: 'flex',\n    flexDirection: 'row'\n});\n\nexport const directionColumn = /*@__PURE__*/style({\n    display: 'flex',\n    flexDirection: 'column'\n});\n\nexport const inTheMiddle = /*@__PURE__*/style({\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n});", "\nimport { div } from '../../../core.mjs';\nimport { style } from '../../../core.mjs';\nimport { separateElementArgs } from '../../../core.mjs';\nimport { text } from '../../../core.mjs';\nimport { span } from '../../../core.mjs';\nimport { directionRow } from '../../../styles.mjs';\n\n\n\n\n\nexport const bulletpoint = (...elements) => {\n    const args = separateElementArgs(elements);\n    const root = div( directionRow, ...args.operations,\n        span('\u2192 '), span(...args.other)\n    );\n    return root;\n}\n\n", "\"use strict\"\n\n\nexport const addToArray = (array, elementOrArray) => {\n    if (isArray(elementOrArray)) {\n        array.push(...elementOrArray);\n    } else {\n        array.push(elementOrArray);\n    }\n}\nexport const toArray = (element) => isArray(element) ? element : [element];\nexport const arrayForEach = (array, callback) => {\n    for (let i = 0; i < array.length; i++) {\n        callback(array[i], i)\n    }\n}\nexport const arrayForEachRev = (array, callback) => {\n    let i = array.length - 1;\n    while (i >= 0) {\n        callback(array[i], i)\n        i--;\n    }\n}\n", "// BASE 99\n// char excluded: 34 - \"\n// char excluded: 92 - \\\n// char codes range: <32 to 126>\n\nexport const base93ToNumber = char => {\n    let code = char.charCodeAt(0);\n    if (code > 34) code--;\n    if (code > 92) code--;\n    code -= 32;\n    return code;\n}\n\nexport const numberToBase93 = number => {\n    number = number % 93;\n    number += 32;\n    if (number >= 34) number++;\n    if (number >= 92) number++;\n    return String.fromCharCode(number)\n}\n", "import { wnd } from \"./core.mjs\";\nimport { numberToBase93 } from \"./base93.mjs\"\n\nexport const crypto = wnd.crypto;\n\nexport const getRandomBuffer = (numOf, bytes = true) => {\n    const elements = Math.ceil(numOf / (bytes ? 1 : 8));\n    const randoms = new Uint8Array(elements);\n    crypto.getRandomValues(randoms);\n    return randoms;\n}\n\nexport const getRandomString = (numOf, characters = true) => {\n    const elements = Math.ceil(numOf / (characters ? 1 : 6.539));\n    const randoms = new Uint16Array(elements);\n    crypto.getRandomValues(randoms);\n\n    let result = '';\n    for (let i = 0; i < elements; i++) {\n        result += numberToBase93(randoms[i])\n    }\n    return result;\n}\n", "import { arrayForEach, arrayForEachRev }    from \"./array.mjs\";\nimport { getRandomString }                  from \"./random.mjs\";\n\nimport { isFunction }                       from \"./core.mjs\";\nimport { isObject }                         from \"./core.mjs\";\n\nimport { SoftEventSelective }               from \"./core.mjs\";\nimport { SoftEvent }                        from \"./core.mjs\";\n\nimport { TRUE }                             from \"./core.mjs\";\nimport { UNDEFINED }                        from \"./core.mjs\";\nimport { LIFECYCLE_ATTACHED }               from \"./core.mjs\";\nimport { LIFECYCLE_DETACHED }               from \"./core.mjs\";\nimport { onLifecycle }                      from \"./core.mjs\";\n\nimport { comment }                          from \"./core.mjs\";\nimport { replaceChild }                     from \"./core.mjs\";\nimport { removeChild }                      from \"./core.mjs\";\nimport { appendChildBefore }                from \"./core.mjs\";\nimport { appendChildOnBottom }              from \"./core.mjs\";\n\n\nexport const StoreObjectBase = (type) => {\n    const delTemporary = () => {\n        if (obj.parent) {\n            obj.parentContent.onElementDel(obj);\n\n            if (!obj.previous)  obj.parentContent.first    = obj.next;\n            if (!obj.next)      obj.parentContent.last     = obj.previous;\n\n            obj.previous.next = obj.next;\n            obj.next.previous = obj.previous;\n\n            obj.parent = obj.parentContent = obj.previous = obj.next = null;\n        }\n    }\n\n    const obj = {\n        id:             getRandomString(10),\n        type,\n\n        parent:         null,\n        parentContent:  null,\n\n        previous:       null,\n        next:           null,\n\n        delTemporary,\n\n        addBefore:      (element) => {\n            element.delTemporary();\n\n            if (obj.previous) {\n                obj.previous.next = element;\n                element.previous = obj.previous;\n            }\n            obj.previous = element;\n            element.next = obj;\n            element.parent = obj.parent;\n            element.parentContent = obj.parentContent;\n\n            element.parentContent.onElementAdd.raise(element);\n        },\n        addAfter:       (element) => {\n            element.delTemporary();\n\n            if (obj.next) {\n                obj.next.previous = element;\n                element.next = obj.next;\n            }\n            obj.next = element;\n            element.next = obj;\n            element.parent = obj.parent;\n            element.parentContent = obj.parentContent;\n\n            element.parentContent.onElementAdd.raise(element);\n        }\n\n    }\n    // return store[obj.id] = obj;\n    return obj;\n}\n\n//==================================================================\n\nexport const StoreList = (objectToExtend, name, type='content-list') => {\n\n    const addOnTop =   (element) => {\n        element.delTemporary();\n\n        if (obj.first) {\n            element.next = obj.first;\n            obj.first.previous = element;\n            obj.first = element;\n        } else {\n            obj.first = obj.last = element;\n        }\n        element.parent = objectToExtend;\n        element.parentContent = obj;\n\n        obj.onElementAdd.raise(element);\n    }\n\n    const addOnBottom = (element) => {\n        element.delTemporary();\n\n        if (obj.last) {\n            element.previous = obj.last;\n            obj.last.next = element;\n            obj.last = element;\n        } else {\n            obj.first = obj.last = element;\n        }\n        element.parent = objectToExtend;\n        element.parentContent = obj;\n\n        obj.onElementAdd.raise(element);\n    }\n\n    const obj = objectToExtend[name] = {\n        type,\n        owner:          objectToExtend,\n        name,\n\n        first:          null,\n        last:           null,\n\n        addOnTop:       (...elements) => (arrayForEachRev(elements, addOnTop), objectToExtend),\n        addOnBottom:    (...elements) => (arrayForEach(elements, addOnBottom), objectToExtend),\n        forEach:        (callback) => {\n            let el = obj.first;\n            while (el) {\n                callback(el, obj);\n                el = el.next;\n            }\n        },\n        forEachRev:     (callback) => {\n            let el = obj.last;\n            while (el) {\n                callback(el, obj);\n                el = el.previous;\n            }\n        },\n    }\n    obj.onElementAdd = SoftEvent(objectToExtend, obj);\n    obj.onElementDel = SoftEvent(objectToExtend, obj);\n    \n    return obj;\n}\nexport const StoreListIndexed = (objectToExtend, name) => {\n    const obj = StoreList(objectToExtend, name, 'content-list-indexed');\n    const index = new Map();\n    obj.onElementAdd.add(e => index.set(e, e));\n    obj.onElementDel.add(e => index.delete(e));\n    obj.contain = (e) => index.has(e) && e;\n    return obj;\n}\nexport const StoreValue = (objectToExtend, name, type='content-value') => {\n    const obj = objectToExtend[name] = {\n        type,\n        owner:          objectToExtend,\n        name,\n\n        value:          null,\n        s:              (v) => {\n            const old = obj.value;\n            if (old !== v) {\n                obj.value = v;\n                obj.onChange.raise(v, old, objectToExtend);\n            }\n        },\n        g:              () => obj.value\n    }\n    obj.onChange = SoftEvent(objectToExtend, obj);\n    \n    return obj;\n}\nexport const StoreReference = (objectToExtend, name) => {\n    const obj = StoreValue(objectToExtend, name, 'content-reference');\n    obj.onChange.add((newRef, oldRef) => {\n        obj.onReferenceDel.raise(oldRef);\n        obj.onReferenceAdd.raise(newRef);\n    });\n    obj.contain = ref => obj.g() === ref;\n    obj.onReferenceChange = obj.onChange;\n    obj.onReferenceAdd = SoftEventSelective(objectToExtend, obj);\n    obj.onReferenceDel = SoftEventSelective(objectToExtend, obj);\n    return obj;\n}\nexport const StoreReferencesList = (objectToExtend, name) => {\n    const map = new Map();\n\n    const obj = objectToExtend[name] = {\n        type:           'content-references-list',\n        owner:          objectToExtend,\n        name,\n\n        add:            (ref) => {\n            if (!map.has(ref)) {\n                map.set(ref, ref);\n                obj.onReferenceAdd.raise(ref);\n            }\n        },\n        del:            (ref) => {\n            if (map.has(ref)) {\n                map.delete(ref);\n                obj.onReferenceDel.raise(ref);\n            }\n        },\n\n        contain:        (ref) => map.has(ref),\n        forEach:        (callback) => map.forEach(callback)\n    }\n\n    obj.onReferenceAdd = SoftEventSelective(objectToExtend, obj);\n    obj.onReferenceDel = SoftEventSelective(objectToExtend, obj);\n\n\n    return obj;\n}\n\nexport const $Reference         = StoreReference;\nexport const $Boolean           = StoreValue;\nexport const $Unsigned          = StoreValue;\nexport const $Signed            = StoreValue;\nexport const $Float             = StoreValue;\nexport const $Text              = StoreValue;\nexport const $List              = StoreList;\nexport const $ListIndexed       = StoreListIndexed;\nexport const $ListOfReferences  = StoreReferencesList;\n\n\n//==================================================================\n\nlet internalKindId = -1;\nexport const StoreKind = (...description) => {\n    let name;\n    if (!name) name = internalKindId--;\n    const descriptionResolved = {};\n    arrayForEachRev(description, d => {\n        if (d.constructorDescription) {\n            Object.assign(descriptionResolved, d.constructorDescription);\n        } else if (isObject(d)) {\n            Object.assign(descriptionResolved, d);\n        } else {\n            name = d;\n        }\n    });\n\n    if (!name) name = internalKindId--;\n\n    const constructor = () => {\n        const obj = StoreObjectBase(name);\n        for (let name in descriptionResolved) {\n            descriptionResolved[name](obj, name);\n        }\n        return obj;\n    }\n    constructor.constructorName = name;\n    constructor.constructorDescription = descriptionResolved;\n    return constructor;\n}\nexport const $kind = StoreKind;\nexport const StoreHTMLRouter = (fallback, constructors = {}) => {\n    const router = {\n        fallback,\n        constructors,\n        add: (kind, HTMLConstructor) => (constructors[kind.constructorName] = HTMLConstructor, router),\n        setFallback: fallbackCallback => (router.fallback = fallbackCallback, router),\n    };\n\n    return router;\n}\nexport const $router = StoreHTMLRouter;\n//==================================================================\n\nconst emptyConstructors = {};\nexport const StoreSyncList = (list, htmlRouter) => (parentHTML) => {\n    \n    let constructors, fallback;\n    // -----------------------------------------\n    if (isFunction(htmlRouter)) {\n        constructors = emptyConstructors;\n        fallback = htmlRouter;\n    } else {\n        constructors = htmlRouter.constructors;\n        fallback = htmlRouter.fallback;    \n    }\n    fallback = fallback || ( () => comment() );\n    // -----------------------------------------\n\n    const elementAddEvent = el => {\n        const constructor = constructors[el.type] || fallback;\n        if (constructor) {\n            const childHTML = constructor(el);\n            if (childHTML) {\n                childrenList.set(el, childHTML);\n                if (el.next) {\n                    let beforeEl, beforeHTML;\n                    while (1) {\n                        beforeEl = el.next;\n                        if (beforeEl) {\n                            beforeHTML = childrenList.get(beforeEl);\n                            if (beforeHTML) {\n                                appendChildBefore(parentHTML, childHTML, beforeHTML);\n                                break;\n                            }\n                        } else {\n                            appendChildOnBottom(parentHTML, childHTML);\n                            break;\n                        }\n                    }\n                } else {\n                    appendChildOnBottom(parentHTML, childHTML);\n                }\n            }\n        }\n    };\n\n    const elementDelEvent = el => {\n        const childHTML = childrenList.get(el);\n        if (childHTML) {\n            childrenList.delete(el);\n            removeChild(parentHTML, childHTML);\n        }\n    };\n\n\n    let childrenList = new Map();\n\n    onLifecycle((status) => {\n        switch (status) {\n            case LIFECYCLE_ATTACHED:\n                let newChildrenList = new Map();\n                let el = list.first;\n                while (el) {\n                    const childHTMLFromList = childrenList.get(el);\n                    if (childHTMLFromList) {\n                        appendChildOnBottom(parentHTML, childHTMLFromList);\n                        newChildrenList.set(el, childHTMLFromList);\n                    } else {\n                        const constructor = constructors[el.type] || fallback;\n                        if (constructor) {\n                            const childHTML = constructor(el);\n                            if (childHTML) {\n                                newChildrenList.set(el, childHTML);\n                                appendChildOnBottom(parentHTML, childHTML);\n                            }\n                        }\n                    }\n\n                    el = el.next;\n                }\n                childrenList = newChildrenList;\n\n                list.onElementAdd.add(elementAddEvent);\n                list.onElementDel.add(elementDelEvent);\n                break;\n\n            case LIFECYCLE_DETACHED:\n                list.onElementAdd.del(elementAddEvent);\n                list.onElementDel.del(elementDelEvent);\n                break;\n        }\n    }, parentHTML);\n}\nexport const StoreSyncReference = (ref, htmlRouter) => (parentHTML) => {\n    \n    let constructors, fallback;\n    // -----------------------------------------\n    if (isFunction(htmlRouter)) {\n        constructors = emptyConstructors;\n        fallback = htmlRouter;\n    } else {\n        constructors = htmlRouter.constructors;\n        fallback = htmlRouter.fallback;\n    }\n    fallback = fallback || ( () => comment() );\n    // -----------------------------------------\n\n\n\n    const getChildHTML = (el) => {\n        const constructor = (el && constructors[el.type]) || fallback;\n\n        let childHTML = constructor(el);\n        if (!childHTML) {\n            childHTML = fallback(el);\n        }\n        return childHTML;\n    }\n\n    let childHTML;\n    const childReplacer = (el) => {\n        const newChildHTML = getChildHTML(el);\n        replaceChild(parentHTML, newChildHTML, childHTML);\n        childHTML = newChildHTML;\n    }\n\n    let el = ref.g();\n    onLifecycle((status) => {\n        switch (status) {\n            case LIFECYCLE_ATTACHED:\n                ref.onChange.add(childReplacer);\n\n                if (childHTML) {\n                    const oldEl = el;\n                    el = ref.g();\n                    if (el !== oldEl) {\n                        childReplacer(el);\n                    }\n                }\n                break;\n\n            case LIFECYCLE_DETACHED:\n                el = ref.g();\n                ref.onChange.del(childReplacer);\n                break;\n        }\n    }, parentHTML);\n\n    childHTML = getChildHTML(el);\n    appendChildOnBottom(parentHTML, childHTML);\n}\nexport const StoreViewIf = (value, htmlFunctionForTrue, htmlFunctionForFalse, inversed) => (parentHTML) => {\n    const dummyComment = htmlFunctionForFalse || comment();\n\n    let oldChildHTML, newChildHTML;\n    const getChildHTML = inversed ? (\n        htmlFunctionForFalse ? (\n            (v) => newChildHTML = v ? htmlFunctionForFalse(value.owner) : htmlFunctionForTrue(value.owner)\n        ) : (\n            (v) => newChildHTML = v ? dummyComment : htmlFunctionForTrue(value.owner)\n        )\n    ) : (\n        htmlFunctionForFalse ? (\n            (v) => newChildHTML = v ? htmlFunctionForTrue(value.owner) : htmlFunctionForFalse(value.owner)\n        ) : (\n            (v) => newChildHTML = v ? htmlFunctionForTrue(value.owner) : dummyComment\n        )\n    );\n\n    const childReplacer = (v) => {\n        replaceChild(parentHTML, getChildHTML(v), oldChildHTML);\n        oldChildHTML = newChildHTML;\n    };\n\n    appendChildOnBottom(parentHTML, oldChildHTML = comment());\n\n    onLifecycle((status) => {\n        switch (status) {\n            case LIFECYCLE_ATTACHED:\n                childReplacer(value.g());\n                value.onChange.add(childReplacer);\n                break;\n\n            case LIFECYCLE_DETACHED:\n                value.onChange.del(childReplacer);\n                break;\n        }\n    }, parentHTML);\n}\nexport const StoreSyncValue = (value, htmlValuePresenter) => {\n    onLifecycle((status) => {\n        switch (status) {\n            case LIFECYCLE_ATTACHED:\n                htmlValuePresenter.s(value.g());\n                value.onChange.add(htmlValuePresenter.s);\n                htmlValuePresenter.onValueChange && htmlValuePresenter.onValueChange.add(value.s);\n                break;\n\n            case LIFECYCLE_DETACHED:\n                htmlValuePresenter.onValueChange && htmlValuePresenter.onValueChange.del(value.s);\n                value.onChange.del(htmlValuePresenter.s);\n                break;\n        }\n    }, htmlValuePresenter);\n\n    return htmlValuePresenter;\n}\n\nexport const $if                = StoreViewIf;\nexport const $sync              = StoreSyncValue;\nexport const $syncList          = StoreSyncList;\nexport const $syncReference     = StoreSyncReference;\n\n\n// TODO: $or $not $and $less $above $lessEqual $aboveEqual\n// TODO: $sum $sub $mul $div $neg", "import { UNDEFINED } from \"./core.mjs\";\n\nimport { onKeyDown } from \"./core.mjs\";\nimport { onMouseUp } from \"./core.mjs\";\nimport { onContextMenu } from \"./core.mjs\";\nimport { TRUE } from \"./core.mjs\";\nimport { onChange } from \"./core.mjs\";\nimport { toBoolean } from \"./core.mjs\";\nimport { FALSE } from \"./core.mjs\";\nimport { setAttribute } from \"./core.mjs\";\nimport { onInput } from \"./core.mjs\";\nimport { onDrop } from \"./core.mjs\";\nimport { onSelect } from \"./core.mjs\";\nimport { onMouseDown } from \"./core.mjs\";\nimport { onKeyUp } from \"./core.mjs\";\n\nimport { SoftEvent } from \"./core.mjs\";\n\n\nconst textInputUserChangeEventsList = \n[onInput, onKeyDown, onKeyUp, onMouseDown, onMouseUp, onSelect, onContextMenu, onDrop];\nexport const assignTextInputUserChangeEvents = (element, callback) => {\n    let oldValue, oldSelectionStart, oldSelectionEnd;\n\n    const eventProcessor = (evt) => {\n        const target = evt.target;\n        const value = target.value;\n\n        if (value !== oldValue) {\n            if (callback(value, oldValue, evt)) {\n                oldSelectionStart = target.selectionStart;\n                oldSelectionEnd = target.selectionEnd;    \n            } else if (oldValue !== UNDEFINED) {\n                target.value = oldValue;\n                target.setSelectionRange(oldSelectionStart, oldSelectionEnd);\n            }\n            oldValue = value;\n        }\n    }\n\n    for (let eventElement of textInputUserChangeEventsList) {\n        eventElement(eventProcessor, element);\n    }\n}\n\n\n// --=======================================================================================--\n\nexport const typeText = (element) => {\n    element.s = (v = '') => {\n        const old = element.value;\n        // if (v.length > lengthMax) v = v.substr(0, lengthMax);\n        if (v !== old) {\n            element.value = v;\n            element.onValueChange.raise(v, old, element);\n        }\n    }\n    element.g = () => element.value;\n    element.onValueChange = SoftEvent(element);\n    assignTextInputUserChangeEvents(element, (v, old) => {\n        element.onValueChange.raise(v, old, element);\n        return TRUE;\n    });\n}\n\nexport const typeCheckbox1 = (element) => {\n    setAttribute(element, 'type', 'checkbox');\n\n    element.s = (v) => {\n        const old = element.checked;\n        if (v !== old) {\n            element.checked = v;\n            element.onValueChange.raise(v, old, element);\n        }\n    }\n    element.g = () => element.checked;\n    element.onValueChange = SoftEvent(element);\n    onCh\n\n    assignTextInputUserChangeEvents(element, (v, old) => {\n        element.onValueChange.raise(v, old, element);\n        return TRUE;\n    });\n}\n\n\nexport const typeCheckbox = (element) => {\n    setAttribute(element, 'type', 'checkbox');\n    element.onValueChange = SoftEvent(element);\n    \n    let internalValue = FALSE;\n\n    const setElementValue = () => {\n        if (internalValue === UNDEFINED) {\n            element.checked = FALSE;\n            element.indeterminate = TRUE;\n        } else {\n            element.checked = internalValue;\n            element.indeterminate = FALSE;\n        }\n    }\n\n    element.s = (v) => {\n        const internalValuePrevious = internalValue;\n        internalValue = (v === UNDEFINED) ? UNDEFINED : toBoolean(v);\n        if (internalValue !== internalValuePrevious) {\n            setElementValue();\n            element.onValueChange.raise(internalValue, internalValuePrevious, element);\n        }\n    }\n    element.g = () => internalValue;\n\n    const toggle = () => {\n        if (!element.readOnly) {\n\n            if (internalValue === UNDEFINED) {\n                internalValue = TRUE;\n            } else if (internalValue === TRUE) {\n                internalValue = FALSE\n            } else if (element.isTristate) {\n                internalValue = UNDEFINED\n            } else {\n                internalValue = TRUE;\n            }\n            setElementValue();\n        }\n    };\n\n\n    onChange(() => {\n        const internalValuePrevious = internalValue;\n        toggle();\n        element.onValueChange.raise(internalValue, internalValuePrevious, element);\n    }, element);\n\n}\n\n\nexport const typeNumber = element => {\n\n}", "import { $kind } from '../../../store.mjs';\nimport { $sync } from '../../../store.mjs';\nimport { $Boolean } from '../../../store.mjs';\n\nimport { input } from '../../../core.mjs';\nimport { div } from '../../../core.mjs';\n\nimport { typeCheckbox } from '../../../inputTypes.mjs';\nimport { $if } from '../../../store.mjs';\nimport { span } from '../../../core.mjs';\n\n\n\nconst FilterData = $kind({\n    showDetails:    $Boolean,\n    showParameters: $Boolean,\n    showCode:       $Boolean,\n});\n\nexport const filterData = FilterData();\n\nexport const filter = () => {\n    const root = div(\n        'Show details: ', $sync(filterData.showDetails, input(typeCheckbox)),\n        $if(filterData.showDetails, \n            ()=> span(\n                '   Show parameters description: ', $sync(filterData.showParameters, input(typeCheckbox)),\n                '   Show code examples: ', $sync(filterData.showCode, input(typeCheckbox)),\n            )\n        )\n    );\n    return root;\n}", "export const mono_free              = `FreeMono,monospace`;\nexport const mono_andale            = `\"Andale Mono\",monospace`;\nexport const mono_lucida            = `\"Lucida Console\",Consolas,monaco,monospace`;\nexport const mono_courier           = `\"Courier Next\",\"Courier New\",courier,monospace`;\n\nexport const serif_sans             = `-apple-system,BlinkMacSystemFont,\"avenir next\",avenir,\"helvetica neue\",helvetica,ubuntu,roboto,noto,\"segoe ui\",arial,sans-serif`;\n\nexport const serif_sans_calibri     = `Calibri,Candara,Segoe,\"Segoe UI\",Optima,Arial,sans-serif`;\nexport const serif_sans_avant       = `\"Century Gothic\",\"Avant Garde Gothic\",\"Avant Garde\",\"URW Gothic L\",heveltica,sans-serif`;\nexport const serif_sans_arial       = `arial,heveltica,sans-serif`;\nexport const serif_sans_verdana     = `verdana,arial,heveltica,sans-serif`;\nexport const serif_sans_avenir      = `'avenir next',avenir,sans-serif`;\nexport const serif_sans_comic       = `\"Comic Sans MS\",cursive,sans-serif`;\nexport const serif_sans_helvetica   = `'helvetica neue',helvetica,sans-serif`;\nexport const serif_sans_impact      = `Impact,Charcoal,sans-serif`;\nexport const serif_sans_lucida      = `\"Lucida Sans Unicode\",\"Lucida Grande\",sans-serif`;\nexport const serif_sans_system      = `sans-serif`;\nexport const serif_sans_tahoma      = `Tahoma,Geneva,sans-serif`;\nexport const serif_sans_optima      = `Optima,Segoe,\"Segoe UI\",Candara,Calibri,Arial`;\n\nexport const serif                  = `georgia,times,serif`;\nexport const serif_system           = `serif`;\n\nexport const serif_athelas          = `athelas,georgia,serif`;\nexport const serif_baskerville      = `baskerville,serif`;\nexport const serif_bodoni           = `\"Bodoni MT\",serif`;\nexport const serif_calisto          = `\"Calisto MT\",serif`;\nexport const serif_garamond         = `garamond,\"Garamond Antiqua\",serif`;\nexport const serif_georgia          = `georgia,serif`;\nexport const serif_palatino         = `\"Palatino Linotype\",\"Book Antiqua\",Palatino,serif`;\nexport const serif_times            = `\"Times New Roman\",times,serif`;\nexport const serif_bookman          = `\"Bookman Old Style\",\"URW Bookman L\",\"itc bookman\",times,serif`;\nexport const serif_century          = `\"Century Schoolbook\",Century,\"new century schoolbook\",\"Century Schoolbook L\",times,serif`;\n\nexport const cursive_chancery       = `\"Apple Chancery\",sans-serif`;\nexport const cursive_bradley        = `\"Bradley Hand\",sans-serif`;\nexport const cursive_brush          = `\"Brush Script MT\",sans-serif`;\n", "\nimport { div } from '../../../core.mjs';\nimport { style } from '../../../core.mjs';\nimport { text } from '../../../core.mjs';\nimport { span } from '../../../core.mjs';\nimport { mono_free } from '../../../fonts.mjs';\nimport { description } from './description.mjs';\n\n\n\n\nconst codeStyle = style({\n    border: {\n        style: 'solid',\n        width: 0.1,\n        color: 'lightgrey',\n        radius: 0.2\n    },\n    padding: 0.2\n});\n\nconst codeStyleCode = style({\n    background: {\n        color: 'lightgrey'\n    },\n    padding: 0.2,\n    text: {\n        font: mono_free,\n        size: 0.8\n    }\n});\n\nexport const code = c => {\n    const root = div(codeStyle,\n        description(c.description),\n        div(codeStyleCode, c.example)\n    )\n    return root;\n}\n\n", "\nimport { div } from '../../../core.mjs';\nimport { style } from '../../../core.mjs';\nimport { separateElementArgs } from '../../../core.mjs';\nimport { text } from '../../../core.mjs';\nimport { span } from '../../../core.mjs';\n\n\n\n\nconst sectionHeaderStyle = style({\n    text: {\n        color: '#00001a',\n        size: 0.8,\n        weight: 'bold'\n    }\n});\n\n\nexport const namedSection = (sectionName, ...elements) => {\n    const args = separateElementArgs(elements);\n    const root = div(...args.operations,\n        div(sectionHeaderStyle, sectionName),\n        ...args.other\n    );\n    return root;\n}", "\nimport { div } from '../../../core.mjs';\nimport { style } from '../../../core.mjs';\nimport { text } from '../../../core.mjs';\nimport { span } from '../../../core.mjs';\nimport { code } from './code.mjs';\nimport { namedSection } from './namedSection.mjs';\n\n\n\n\n\nexport const importStatement = i => {\n    const root = namedSection('Import statement:',\n        code({\n            example: `import { ${i.name} } from 'hussar/${i.module}';`\n        })\n    )\n    return root;\n}\n\n", "\nimport { div } from '../../../core.mjs';\nimport { style } from '../../../core.mjs';\nimport { text } from '../../../core.mjs';\nimport { span } from '../../../core.mjs';\nimport { namedSection } from './namedSection.mjs';\n\n\nexport const parametersShort = params => {\n    if (!params) return text('()');\n    const root = span('(', params.map(p => p.name).join(', '), ')');\n    return root;\n}\n\nconst parametersStyle = style({\n    border: {\n        left: {\n            style: 'solid',\n            width: 0.2,\n            color: 'lightblue',\n        }\n    },\n    padding: {\n        left: 0.2\n    },\n    margin: {\n        left: 0.2\n    }\n});\n\nexport const parameters = params => {\n    if (!params || !params.length) return;\n    const root = namedSection('Parameters:', \n        div(\n            parametersStyle,\n            ...params.map(p => div(p.name, \": \", p.type))\n        )\n    );\n    return root;\n\n}\n", "\nimport { div } from '../../../core.mjs';\nimport { style } from '../../../core.mjs';\nimport { text } from '../../../core.mjs';\nimport { span } from '../../../core.mjs';\nimport { directionRow } from '../../../styles.mjs';\nimport { description } from './description.mjs';\nimport { namedSection } from './namedSection.mjs';\n\n\nexport const returns = r => {\n    if (!r) return;\n\n    const root = namedSection('Returns:',\n        div(directionRow,\n            span(r.type, r.description && ': '),\n            description(r.description)\n        )\n    )\n    return root;\n}\n\n", "\nimport { div } from '../../../core.mjs';\nimport { style } from '../../../core.mjs';\nimport { text } from '../../../core.mjs';\nimport { span } from '../../../core.mjs';\nimport { namedSection } from './namedSection.mjs';\nimport { code } from './code.mjs';\n\n\n\n\nexport const usageList = l => {\n    if (!l || !l.length) return;\n\n    const root = namedSection('Usage:',\n        ...l.map(u => code(u))\n    )\n    return root;\n}\n\n", "\nimport { div } from '../../../core.mjs';\nimport { style } from '../../../core.mjs';\nimport { span } from '../../../core.mjs';\n\nimport { $if } from '../../../store.mjs';\nimport { filterData } from './filter.mjs';\n\nimport { description } from './description.mjs';\nimport { importStatement } from './importStatement.mjs';\nimport { parameters } from './parameters.mjs';\nimport { parametersShort } from './parameters.mjs';\nimport { returns } from './returns.mjs';\nimport { usageList } from './usageList.mjs';\n\n\n\nconst methodStyleName = style({\n    text: {\n        weight: 'bold',\n        color:  'darkblue'\n    }\n});\n\nexport const method = m => {\n    const root = div(\n        div(span(methodStyleName, m.name), parametersShort(m.params)),\n        $if(filterData.showDetails,\n            () => div(\n                description(m.description),\n                $if(filterData.showParameters, () => parameters(m.params)),\n                returns(m.returns),\n                $if(filterData.showCode, () =>\n                    div(\n                        importStatement(m),\n                        usageList(m.usage)        \n                    )\n                )\n            )\n        )\n    )\n    return root;\n}\n\n", "\nimport { div } from '../../../core.mjs';\nimport { style } from '../../../core.mjs';\nimport { text } from '../../../core.mjs';\nimport { span } from '../../../core.mjs';\n\nimport { $if } from '../../../store.mjs';\nimport { filterData } from './filter.mjs';\n\nimport { description } from './description.mjs';\nimport { importStatement } from './importStatement.mjs';\nimport { usageList } from './usageList.mjs';\n\n\n\n\nconst singletonStyleName = style({\n    text: {\n        weight: 'bold',\n        color:  'darkgreen'\n    }\n});\n\nexport const singleton = s => {\n    const root = div(\n        div(singletonStyleName, s.name),\n        $if(filterData.showDetails, \n            () => div(\n                description(s.description),\n                $if(filterData.showCode, () =>\n                    div(\n                        importStatement(s),\n                        usageList(s.usage),     \n                    )\n                )\n       \n            )\n        )\n    );\n    return root;\n}\n", "\nimport { div } from '../../../core.mjs';\nimport { text } from '../../../core.mjs';\nimport { style } from '../../../core.mjs';\nimport { span } from '../../../core.mjs';\nimport { bulletpoint } from './bulletpoint.mjs';\nimport { method } from './method.mjs';\nimport { singleton } from './singleton.mjs';\n\n\n\nconst listStyle = style({\n    margin: {\n        left: 0.5\n    }\n});\nexport const list = l => {\n    if (!l) return;\n\n    const root = div(listStyle, ...l.map(e => {\n        switch (e.kind) {\n            case 'method':\n                return method(e);\n            case 'singleton':\n                return singleton(e);\n        }\n    }).map(e => bulletpoint(e)));\n    return root;\n}\n\n", "\nimport { div } from '../../../core.mjs';\nimport { text } from '../../../core.mjs';\nimport { style } from '../../../core.mjs';\nimport { span } from '../../../core.mjs';\nimport { description } from './description.mjs';\nimport { list } from './list.mjs';\n\n\n\n\nconst docDbStyleTitle = style({\n    text: {\n        size: 1.5,\n    }\n});\n\n\nexport const docDb = db => {\n    const root = div(\n        div(docDbStyleTitle, db.title),\n        description(db.description),\n        list(db.list)\n    )\n    return root;\n}\n\n\n\n", "import '../../styleReset/main.mjs'\n\nimport {attributes}     from './db/attributes.mjs';\nimport {aliases}        from './db/aliases.mjs';\n\nimport { body } from '../../core.mjs';\nimport { docDb } from './components/docDb.mjs';\n\nimport { filter } from './components/filter.mjs';\n\n\n\n\nbody(\n    filter(),\n    docDb(attributes),\n    docDb(aliases)\n);"],
  "mappings": "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",
  "names": []
}
